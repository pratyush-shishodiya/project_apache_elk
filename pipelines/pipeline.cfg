input{
    file{
        path => "/Users/pratyushshishodiya/Desktop/Project_apache/logs/apache-*.log"
        start_position => "beginning"
    }

    file{
        path => "/Users/pratyushshishodiya/Desktop/Project_apache/logs/java-error.log"
        codec => multiline{
            pattern => "^(\s+|\t)|(caused by:)"
            what=>"previous"
            auto_flush_interval => 5
        }
    }

    
}


filter{
    if [headers][request_path] =~ "error" or [path] =~ "error"{
        mutate {
            replace => { type => "error"}
        }
        grok {
			match => { "message" => "%{CATALINA_DATESTAMP:timestamp} %{LOGLEVEL:level} %{JAVACLASS:class}: (?<msg>.+?(?=(\r\n|\r|\n)))" }
		}
    }else{
        mutate{
            replace => {type => "access"}
        }
        grok{
            match => { "message" => '%{HTTPD_COMMONLOG} "%{GREEDYDATA: referrer}" "%{GREEDYDATA: agent}"' }
        }

        if "_grokparsefailure"  in [tags]{
            drop { }
        }

        if "_dateparsefailure" in [tags]{
            drop { }
        }

        mutate{
            convert=>{
                "response" => "integer"
                "bytes" => "integer"
            }
        }
        # date{
        #     match => ["timestamp","dd/MMM/yyyy:HH:mm:ss z"]
        #     remove_field => ["timestamp"]
        # }


        # geoip{
        #     source => "clientip" #The geoip filter will only work with public IP addresses.
        # }

        # Admin pages
		if [request] =~ /^\/admin\// {
			drop { }
		}

		# Static files
		if [request] =~ /^\/js\//
			or [request] =~ /^\/css\//
			or [request] in ["/robots.txt", "/favicon.ico"] {
			drop { }
		}

		# Crawlers
		if [ua][device] == "Spider" {
			drop { }
		}



        useragent{
            source => "agent"
            target => "ua"
        }

    }

    mutate {
		remove_field => [ "headers", "@version", "host" ]
	}


     
}

output{
    if [type] == "access" {
        elasticsearch{
            hosts =>["localhost:9200"]
            index => "apacheacces"
            #index => "%{type}-%{+YYYY.MM.dd}"
            http_compression => true

        }
    }
    else{
        stdout {
            codec => rubydebug {
                metadata => true #This makes the logs to appear in console
            }
        }
    }
    


    # file{
    #     path => "/Users/pratyushshishodiya/Desktop/Project_apache/Output_logstash/%{type}_%{+yyyy_MM_dd}.log"
    # }   
}

